//BlackSholesAsian.edp
int N = 25, L=200,Nmax = 30,n=0;
real  T=4, sigma = 0.3, r=0.03, K =100, t, dt = T/Nmax;

mesh th = square (N, N, [ L*x, 10*y]);
fespace  Vh(th, P2);



func u1= (sigma^2-r)*x;
func u2 = (y-x)/(T-t); 

real g1,g2,g3;

Vh u = max(y-K, 0.), v, uold;


problem BS(u, v, init=n)=
	int2d(th) (u*v*(r+1/dt)
	+dx(u)*dx(v)*x^2*sigma^2/2)
	-int2d(th) (convect ([u1,u2], -dt,uold)*v/dt)
	-int1d(th,2)((g1*(y<g3) + g2*(y>=g3))*v);

for (t=0; t<T-2; t+=dt)
{
//artificial boundaties 
g1 = 2*t*exp(-t*r)/T/(sigma*L)^2;
g2 = 2*(1-exp(-t*r))/T/r/(sigma*L)^2;
g3 = K*T/(T-t+0.001);
BS; n=1;
uold = u;
plot(u,  wait=0, value=1,  dim = 3, fill=1);
};

